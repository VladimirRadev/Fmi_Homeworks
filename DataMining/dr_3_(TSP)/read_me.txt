***Интелигентни системи Софтуерно инженерство курс 4 зимен семестър Домашно 3 ***
Владимир Радев фн.62530 група 1

-За решаването на задачата съм използвал Генетични алгоритми със псевдо кода предоставен на упражнения
-POPULATION_SIZE,GENERETIONS_COUNT са константни променливи които обозначават колко да е размерът на популацията като това число трябва да е четно. Както и броят генерации които да ни извърти алгоритъма за да намери оптималното решение. Тези константи може да се променят и да се виждат промените спрямо тях. Накрая се принтира и времето за изпълнение на задачата.
-Има два варианта за изпълнение на алгоритъма ( върху данните за uk cities или за n=1 , ... ,100,) . Това става като откоментираме желания вариант и съответно откоментираме нежелания :
	->РЕД 581    n_random_points_run();
	->РЕД 582    //uk_run();
      
    ||
	->РЕД 581    //n_random_points_run();
	->РЕД 582    uk_run();

-За решаването използвам популация от 10 родителя , като ги crossOver-вам по двойки и получавам децата . Които деца , представляват следващата генерация , но винаги проверям дали стария най-добър родител  е по-добър от новото най-добро дете , ако не запазвам най-добрия родител и за следващата генерация
	(П.П Опитах много варианти за манипулация по това естество и това беше най-добрия вариант- в най-много случаи от тестовете ми стигам до оптимален резултат - за uk - 1595 , а не влизам в локален екстремиум както с другите варианти)
-Crossover-a е "twoPointCrossOver" ( написах и cycleCrossOver и го оставям в кода, ако искате да го тествате. За мен беше неоптимален и прекалено бавен)
-Mutatian-a е "swap"



		-В зипа може да откриете:
			->IS_DR3_fn_62530.cpp - кодът на задачата на (Ц++)
			->IS_DR3_fn_62530.exe - екзето от ръннатия код