#include <iostream>
#include <vector>
#include <unordered_map>
#include <map>
#include <queue>
#include <deque>

int main()
{
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(nullptr);
    std::cout.tie(nullptr);
    std::vector<std::vector<short>>matrix;
    short n = 0, m = 0, t = 0, k = 0, i = 0, j = 0;
    std::cin >> n >> m;
    matrix.resize(n + 1);
    matrix[0].resize(m + 1);
    for (short i = 1; i <= n; i++)
    {
        matrix[i].resize(m + 1);
        for (short j = 1; j <= m; j++)
        {
            matrix[i][j] = -1;
        }
    }
    std::cin >> t >> k;

    for (short d = 0; d < k; d++)
    {
        std::cin >> i >> j;
        matrix[i][j] = 0;
    }
    for (short min = 0; min < t; min++)
    {
        for (short x = 1; x <= n; x++)
        {
            for (short y = 1; y <= m; y++)
            {
                if (matrix[x][y] == min)
                {
                    if (x - 1 >= 1 && matrix[x-1][y]==-1)
                    {
                        matrix[x - 1][y] = min + 1;
                    }
                    if (y + 1 <= m && matrix[x][y+1] == -1)
                    {
                        matrix[x][y + 1] = min + 1;
                    }
                    if (x + 1 <= n && matrix[x+1][y]==-1)
                    {
                        matrix[x + 1][y] = min + 1;
                    }
                    if (y - 1 >= 1 && matrix[x][y-1]==-1)
                    {
                        matrix[x][y - 1] = min + 1;
                    }
                }
            }
        }
    }


    int count = 0;
    for (short l = 1; l <= n; l++)
    {
        for (short d = 1; d <= m; d++)
        {
            if (matrix[l][d] == -1)
            {
                count++;
            }
        }
    }
    std::cout << count << std::endl;


}

