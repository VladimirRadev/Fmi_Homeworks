#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <queue>  
#include <climits>
#include <map>
using namespace std;
#define endl '\n'
int nums[1000000]{};
deque<pair<int, int>>q;
int cnt_added = 0;
int cnt_removed = 0;

int findMin()
{
    if (q.empty())
    {
        return 0;
    }
   return q.front().first;
}
void addElement(const int& newElement)
{
    while (!q.empty() && q.back().first > newElement)
    {
        q.pop_back();
    }
    q.push_back(make_pair(newElement, cnt_added));
    cnt_added++;
}
void removeElement()
{
    if (!q.empty() && q.front().second == cnt_removed)
    {
        q.pop_front();
    }
    cnt_removed++;
}
int main() 
{
    int s = 0;
    int n = 0, d = 0, input = 0;
    cin >> n >> d;
    if (n == 0 || d == 0)
    {
        cout << 0 << endl;
    }
    for (int i = 0; i < n; i++)
    {
        cin >> input;
        nums[i] = input;
    }
    long long sum = 0;
    int counter = 0;
    for (int i = 0; i < d; i++)
    {
        addElement(nums[i]);
    }
    sum += findMin();
    removeElement();
    for (int i = d; i < n; i++)
    {
        addElement(nums[i]);
        sum += findMin();
        removeElement();
           
    }
    cout<<sum<<endl;
}