SET SCHEMA DB2MOVIE;

SELECT COUNT(*) AS CNT_ALL, COUNT(LENGTH) AS CNT_LEN FROM MOVIE;

CREATE TABLE T(
    TEXT VARCHAR(10)
);

SELECT COUNT(*) AS CNT, COUNT(TEXT) AS CNT_TXT
FROM T;

/*
5) SELECT NAME, NETWORTH, COUNT(*) AS CNT, NETWORTH/COUNT(*) AS AVG
1) FROM MOVIEEXEC JOIN  MOVIE ON MOVIEEXEC.CERT# = MOVIE.PRODUCERC#
2) WHERE CNT x
3) GROUP BY CERT#, NAME, NETWORTH;
4) HAVING CNT x
6) ORDER BY CNT
7) FETCH FIRST 1 ROWS ONLY, TOP, LIMIT, ...
*/

SELECT * FROM MOVIEEXEC;

SELECT *
    FROM MOVIE
WHERE COALESCE(LENGTH,0) <= ALL (SELECT COALESCE(LENGTH, 0) FROM MOVIE);


SELECT NAME, STUDIONAME, TITLE, LENGTH
FROM MOVIE M FULL JOIN STUDIO on STUDIO.NAME = M.STUDIONAME
WHERE TITLE IS NULL OR NAME IS NULL;

-- 2020.09
SELECT S.NAME, S.ADDRESS
FROM STUDIO S JOIN MOVIE M on S.NAME = M.STUDIONAME
WHERE M.INCOLOR='Y'
INTERSECT ALL
SELECT S.NAME, S.ADDRESS
FROM STUDIO S JOIN MOVIE M on S.NAME = M.STUDIONAME
WHERE M.INCOLOR='N'
ORDER BY ADDRESS;

SELECT DISTINCT S.NAME, S.ADDRESS
FROM STUDIO S JOIN MOVIE M on S.NAME = M.STUDIONAME
WHERE M.INCOLOR='Y' AND S.NAME IN (SELECT S.NAME
                                   FROM STUDIO S
                                   JOIN MOVIE M on S.NAME = M.STUDIONAME
                                   WHERE M.INCOLOR='N')
ORDER BY S.ADDRESS;

SELECT NAME, ADDRESS, AVG(LENGTH) AS AVG_LEN, COUNT(TITLE) AS CNT
FROM STUDIO S LEFT JOIN MOVIE M ON S.NAME = M.STUDIONAME
GROUP BY NAME, ADDRESS
HAVING COUNT(TITLE) <=3;

-- 2020.08

SELECT DISTINCT S.STARNAME, MS.BIRTHDATE, M.INCOLOR
FROM MOVIE M, STARSIN S, MOVIESTAR MS
WHERE M.TITLE = S.MOVIETITLE AND M.YEAR = S.MOVIEYEAR
AND S.STARNAME = MS.NAME
AND S.STARNAME NOT LIKE '%Jr.%'
AND M.INCOLOR = 'Y'
ORDER BY MS.BIRTHDATE DESC, S.STARNAME;


SELECT NAME, BIRTHDATE
FROM MOVIESTAR MS
WHERE NAME NOT LIKE '%Jr.%'
AND NAME IN (SELECT STARNAME
                   FROM STARSIN , MOVIE
                   WHERE TITLE = MOVIETITLE AND YEAR = MOVIEYEAR
                   AND INCOLOR = 'Y')
ORDER BY BIRTHDATE DESC, NAME;

select distinct name, birthdate
from moviestar
join starsin on name = starname
join movie on movietitle = title and movieyear = year
where name not like '%Jr.%' and incolor = 'Y'
order by birthdate desc, name;

SELECT MS.NAME, YEAR(BIRTHDATE) AS YEAR, COUNT(DISTINCT M.STUDIONAME) AS CNT_STUDIO
FROM MOVIESTAR MS LEFT JOIN STARSIN S ON MS.NAME=S.STARNAME
LEFT JOIN MOVIE M ON M.TITLE = S.MOVIETITLE AND M.YEAR = S.MOVIEYEAR
WHERE MS.GENDER = 'F'
GROUP BY MS.NAME, BIRTHDATE
HAVING COUNT(S.MOVIETITLE) <=6;

-- 2019.09

SELECT *
FROM MOVIESTAR
WHERE BIRTHDATE = (SELECT MAX(BIRTHDATE) FROM MOVIESTAR);

SELECT *
FROM MOVIESTAR
WHERE BIRTHDATE >= ALL(SELECT BIRTHDATE FROM MOVIESTAR);


-- 2019.07

SELECT NAME, NETWORTH
FROM MOVIEEXEC
WHERE NETWORTH = (SELECT MIN(NETWORTH) FROM MOVIEEXEC);

SELECT NAME, NETWORTH
FROM MOVIEEXEC
WHERE NETWORTH <= ALL (SELECT NETWORTH FROM MOVIEEXEC);

-- 2018.09
SET SCHEMA DB2SHIPS;

SELECT S.CLASS, MIN(YEAR(DATE)) AS MIN_YEAR, MAX(YEAR(DATE)) MAX_YEAR, COUNT(DISTINCT B.NAME) AS CNT
FROM SHIPS S LEFT JOIN OUTCOMES O on S.NAME = O.SHIP
LEFT JOIN BATTLES B on O.BATTLE = B.NAME
WHERE S.CLASS LIKE 'N%'
GROUP BY S.CLASS;

SELECT *
FROM
(
SELECT O.BATTLE, COUNT(S.NAME) AS CNT_BB
FROM CLASSES C, SHIPS S, OUTCOMES O
WHERE C.CLASS = S.CLASS AND S.NAME=O.SHIP
AND C.TYPE='bb'
GROUP BY O.BATTLE) T_BB
JOIN
(SELECT O.BATTLE, COUNT(S.NAME) AS CNT_BC
FROM CLASSES C, SHIPS S, OUTCOMES O
WHERE C.CLASS = S.CLASS AND S.NAME=O.SHIP
AND C.TYPE='bc'
GROUP BY O.BATTLE) T_BC
ON T_BB.BATTLE = T_BC.BATTLE
WHERE T_BB.CNT_BB > T_BC.CNT_BC;


SELECT O.BATTLE AS CNT_BB
FROM CLASSES C, SHIPS S, OUTCOMES O
WHERE C.CLASS = S.CLASS AND S.NAME=O.SHIP
AND C.TYPE='bb'
GROUP BY O.BATTLE
HAVING COUNT(S.NAME) > (SELECT COUNT(S1.NAME) AS CNT_BC
                    FROM CLASSES C1, SHIPS S1, OUTCOMES O1
                    WHERE C1.CLASS = S1.CLASS AND S1.NAME=O1.SHIP
                    AND C1.TYPE='bc' AND O1.BATTLE = O.BATTLE
                    GROUP BY O1.BATTLE);

-- 2018.07

SET SCHEMA DB2MOVIE;

SELECT STUDIONAME, MIN(YEAR) AS MIN_YEAR, MAX(YEAR) AS MAX_YEAR, COUNT(*) CNT
FROM MOVIE
WHERE STUDIONAME LIKE 'M%'
GROUP BY STUDIONAME;

SELECT MS.NAME, COUNT(S.MOVIETITLE) AS CNT
FROM MOVIESTAR MS, STARSIN S
WHERE MS.NAME = S.STARNAME
AND MS.GENDER = 'F'
GROUP BY MS.NAME
HAVING COUNT(*) >= ALL(SELECT COUNT(S.MOVIETITLE) AS CNT
                       FROM MOVIESTAR MS, STARSIN S
                       WHERE MS.NAME = S.STARNAME
                       AND MS.GENDER = 'F'
                       GROUP BY MS.NAME);

-- 2017.09

SET SCHEMA DB2SHIPS;

SELECT NAME, COUNTRY
FROM SHIPS LEFT JOIN OUTCOMES ON NAME = SHIP
LEFT JOIN CLASSES ON CLASSES.CLASS = SHIPS.CLASS
WHERE RESULT <> 'sunk' OR RESULT IS NULL;

SELECT NAME, DISPLACEMENT, NUMGUNS
FROM CLASSES C JOIN SHIPS S on C.CLASS = S.CLASS
WHERE DISPLACEMENT = (SELECT MIN(DISPLACEMENT) FROM CLASSES)
AND NUMGUNS = (SELECT MAX(NUMGUNS) FROM CLASSES C1 WHERE C.CLASS = C1.CLASS);

SELECT BATTLE, SHIP
FROM OUTCOMES O1
WHERE NOT EXISTS (SELECT * FROM OUTCOMES O2
               WHERE O1.BATTLE = O2.BATTLE
               AND O1.SHIP <> O2.SHIP);

-- 2017.07

SET SCHEMA DB2MOVIE

SELECT STUDIONAME, TITLE, YEAR
FROM MOVIE M
WHERE YEAR = (SELECT MAX(YEAR) FROM MOVIE WHERE STUDIONAME = M.STUDIONAME);

SELECT NAME, SUM(LENGTH) AS SUM_LEN
FROM MOVIEEXEC JOIN MOVIE ON PRODUCERC# = CERT#
GROUP BY NAME
HAVING MIN(YEAR) < 1980;

SELECT STARNAME, TITLE, NETWORTH
FROM STARSIN JOIN MOVIE ON MOVIETITLE=TITLE AND MOVIEYEAR = YEAR
JOIN (SELECT CERT#, NETWORTH, NAME
     FROM MOVIEEXEC
     WHERE NETWORTH = (SELECT MAX(NETWORTH) FROM MOVIEEXEC))T
ON T.CERT# = PRODUCERC#;


-- 2016

SET SCHEMA DB2SHIPS;

SELECT c.country , COUNT(o.result)
FROM classes c left join ships s ON c.class=s.class
    LEFT JOIN outcomes o ON s.name=o.ship
WHERE result='sunk'  OR result IS NOT NULL
GROUP BY c.country;

SELECT c.country , COUNT(o.result)
FROM classes c  JOIN ships s ON c.class=s.class
    JOIN outcomes o ON s.name=o.ship
WHERE result='sunk'GROUP BY c.country;

SELECT DISTINCT c.country, (SELECT COUNT(o.result)
							FROM classes c1 JOIN ships s   ON c1.class=s.class JOIN outcomes o ON s.name=o.ship
							WHERE result='sunk'   AND c1.country=c.country)
FROM classes c join SHIPS s on c.CLASS=s.CLASS join OUTCOMES o on s.NAME = o.SHIP;



